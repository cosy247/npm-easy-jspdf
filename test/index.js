// return;

import EasyPDF from '../src/index.js';

// 创建 PDF 文档

const pdf = new EasyPDF();
pdf
  .addText(
    "在 `jsPDF` 中，获取字体的高度并不是一个直接的操作，因为 `jsPDF` 没有提供直接获取字体高度的内置方法。不过，可以通过一些间接的方式来估算字体的高度。### 字体高度的估算方法字体高度通常取决于字体大小和字体样式。在 `jsPDF` 中，字体大小是以点（`pt`）为单位的，而字体高度通常是字体大小的一定比例。一般来说，字体高度大约是字体大小的 1.2 到 1.5 倍。例如：- 如果字体大小为 12pt，字体高度可能在 14.4pt 到 18pt 之间。- 如果字体大小为 20pt，字体高度可能在 24pt 到 30pt 之间。### 示例：估算字体高度以下是一个示例代码，展示如何估算字体高度：```javascriptconst { jsPDF } = require('jspdf');// 创建一个新的 PDF 文档const doc = new jsPDF();// 设置字体大小const fontSize = 20; // 字体大小为 20ptdoc.setFontSize(fontSize);// 估算字体高度（通常为字体大小的 1.2 到 1.5 倍）const estimatedFontHeight = fontSize * 1.2; // 可以根据需要调整比例// 添加文本doc.text('Hello, World!', 10, 20);// 输出估算的字体高度console.log('估算的字体高度（单位：点）：', estimatedFontHeight);// 保存 PDF 文件doc.save('example.pdf');```### 获取行间距如果你需要更精确的行间距，可以通过 `doc.getLineHeightFactor()` 方法获取行间距因子。默认情况下，`jsPDF` 的行间距因子是 1.15，这意味着行间距是字体大小的 1.15 倍。```javascriptconst { jsPDF } = require('jspdf');const doc = new jsPDF();// 设置字体大小const fontSize = 20; // 字体大小为 20ptdoc.setFontSize(fontSize);// 获取行间距因子const lineHeightFactor = doc.getLineHeightFactor(); // 默认值为 1.15// 计算行间距const lineHeight = fontSize * lineHeightFactor;// 添加文本doc.text('Hello, World!', 10, 20);// 输出行间距console.log('行间距（单位：点）：', lineHeight);// 保存 PDF 文件doc.save('example.pdf');```### 自定义行间距如果你需要自定义行间距，可以通过 `doc.setLineHeightFactor()` 方法设置行间距因子：```javascriptconst { jsPDF } = require('jspdf');const doc = new jsPDF();// 设置字体大小const fontSize = 20; // 字体大小为 20ptdoc.setFontSize(fontSize);// 设置自定义行间距因子const customLineHeightFactor = 1.5;doc.setLineHeightFactor(customLineHeightFactor);// 计算行间距const lineHeight = fontSize * customLineHeightFactor;// 添加文本doc.text('Hello, World!', 10, 20);// 输出行间距console.log('自定义行间距（单位：点）：', lineHeight);// 保存 PDF 文件doc.save('example.pdf');```### 注意事项1. **单位转换**：`jsPDF` 中的字体大小和行间距是以点（`pt`）为单位的，而 PDF 页面的坐标是以毫米（`mm`）为单位的。如果需要将字体高度或行间距转换为毫米，可以使用以下换算关系：   - 1 英寸 = 25.4 毫米   - 1 英寸 = 72 点   - 因此，1 点 ≈ 0.3528 毫米   例如：   ```javascript   const lineHeightInMm = lineHeight * 0.3528;   console.log('行间距（单位：毫米）：', lineHeightInMm);   ```2. **字体样式**：不同字体样式（如粗体、斜体）可能会导致字体高度略有不同。如果需要更精确的控制，建议在实际文档中进行测试。3. **自定义字体**：如果你使用的是自定义字体，字体高度可能会因字体设计而有所不同。在这种情况下，估算值可能需要根据实际情况调整。通过以上方法，你可以估算字体高度和行间距，并在生成 PDF 时进行合理的布局。",
    10,
    10
  )
  .addLine()
  .addText(
    "在 `jsPDF` 中，获取字体的高度并不是一个直接的操作，因为 `jsPDF` 没有提供直接获取字体高度的内置方法。不过，可以通过一些间接的方式来估算字体的高度。### 字体高度的估算方法字体高度通常取决于字体大小和字体样式。在 `jsPDF` 中，字体大小是以点（`pt`）为单位的，而字体高度通常是字体大小的一定比例。一般来说，字体高度大约是字体大小的 1.2 到 1.5 倍。例如：- 如果字体大小为 12pt，字体高度可能在 14.4pt 到 18pt 之间。- 如果字体大小为 20pt，字体高度可能在 24pt 到 30pt 之间。### 示例：估算字体高度以下是一个示例代码，展示如何估算字体高度：```javascriptconst { jsPDF } = require('jspdf');// 创建一个新的 PDF 文档const doc = new jsPDF();// 设置字体大小const fontSize = 20; // 字体大小为 20ptdoc.setFontSize(fontSize);// 估算字体高度（通常为字体大小的 1.2 到 1.5 倍）const estimatedFontHeight = fontSize * 1.2; // 可以根据需要调整比例// 添加文本doc.text('Hello, World!', 10, 20);// 输出估算的字体高度console.log('估算的字体高度（单位：点）：', estimatedFontHeight);// 保存 PDF 文件doc.save('example.pdf');```### 获取行间距如果你需要更精确的行间距，可以通过 `doc.getLineHeightFactor()` 方法获取行间距因子。默认情况下，`jsPDF` 的行间距因子是 1.15，这意味着行间距是字体大小的 1.15 倍。```javascriptconst { jsPDF } = require('jspdf');const doc = new jsPDF();// 设置字体大小const fontSize = 20; // 字体大小为 20ptdoc.setFontSize(fontSize);// 获取行间距因子const lineHeightFactor = doc.getLineHeightFactor(); // 默认值为 1.15// 计算行间距const lineHeight = fontSize * lineHeightFactor;// 添加文本doc.text('Hello, World!', 10, 20);// 输出行间距console.log('行间距（单位：点）：', lineHeight);// 保存 PDF 文件doc.save('example.pdf');```### 自定义行间距如果你需要自定义行间距，可以通过 `doc.setLineHeightFactor()` 方法设置行间距因子：```javascriptconst { jsPDF } = require('jspdf');const doc = new jsPDF();// 设置字体大小const fontSize = 20; // 字体大小为 20ptdoc.setFontSize(fontSize);// 设置自定义行间距因子const customLineHeightFactor = 1.5;doc.setLineHeightFactor(customLineHeightFactor);// 计算行间距const lineHeight = fontSize * customLineHeightFactor;// 添加文本doc.text('Hello, World!', 10, 20);// 输出行间距console.log('自定义行间距（单位：点）：', lineHeight);// 保存 PDF 文件doc.save('example.pdf');```### 注意事项1. **单位转换**：`jsPDF` 中的字体大小和行间距是以点（`pt`）为单位的，而 PDF 页面的坐标是以毫米（`mm`）为单位的。如果需要将字体高度或行间距转换为毫米，可以使用以下换算关系：   - 1 英寸 = 25.4 毫米   - 1 英寸 = 72 点   - 因此，1 点 ≈ 0.3528 毫米   例如：   ```javascript   const lineHeightInMm = lineHeight * 0.3528;   console.log('行间距（单位：毫米）：', lineHeightInMm);   ```2. **字体样式**：不同字体样式（如粗体、斜体）可能会导致字体高度略有不同。如果需要更精确的控制，建议在实际文档中进行测试。3. **自定义字体**：如果你使用的是自定义字体，字体高度可能会因字体设计而有所不同。在这种情况下，估算值可能需要根据实际情况调整。通过以上方法，你可以估算字体高度和行间距，并在生成 PDF 时进行合理的布局。",
    10,
    10
  );
pdf.save('example.pdf');
